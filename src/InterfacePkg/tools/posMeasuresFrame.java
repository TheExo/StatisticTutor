/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacePkg.tools;
import DataPkg.SavedFileObj;
import DataPkg.frequencyFileReader;
import DataPkg.graphFileReader;
import DataPkg.posMeasuresFileReader;
import InterfacePkg.MainMenuFrame;
import LogicPkg.ArithmeticUnitNormalizer;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ignacio
 */
public class posMeasuresFrame extends javax.swing.JFrame {
    private ArrayList<String> list =  new ArrayList();
    private ArithmeticUnitNormalizer calc = new ArithmeticUnitNormalizer();
    private String fileName = "Nuevo Documento";
    private final int windowID = 3;
    /**
     * Creates new form GrapherVentana
     */
    public posMeasuresFrame(posMeasuresFileReader preLoad, String pFileName) {
        initComponents();
        String dataPanel = "";
        if(preLoad!=null){
            list = preLoad.getList();
            if(!list.isEmpty()){
                calc.setArray(list);
                resultDisplayTA.setText(String.valueOf(calc.getResults())); 
            }
            for(String part: list)
                dataPanel += part + "\n";
            dataDisplayTA.setText(dataPanel);
            inputTF.setText("");
        }
        if(pFileName != null)
        fileName = pFileName;
        this.setTitle(fileName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        returnBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataDisplayTA = new javax.swing.JTextArea();
        inputTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultDisplayTA = new javax.swing.JTextArea();
        addBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        delBtn = new javax.swing.JButton();
        calcBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveMBtn = new javax.swing.JMenuItem();
        loadMBtn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        graphMakerMI = new javax.swing.JMenuItem();
        frequencyMBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        returnBtn.setText("Regresar");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Media Aritmética");

        dataDisplayTA.setEditable(false);
        dataDisplayTA.setColumns(20);
        dataDisplayTA.setRows(5);
        jScrollPane1.setViewportView(dataDisplayTA);

        inputTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTFKeyPressed(evt);
            }
        });

        jLabel2.setText("Ingreso de Datos");

        jLabel3.setText("Resultados");

        resultDisplayTA.setEditable(false);
        resultDisplayTA.setColumns(20);
        resultDisplayTA.setRows(5);
        jScrollPane2.setViewportView(resultDisplayTA);

        addBtn.setText("Añadir Dato");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Cerrar");

        jLabel5.setText("Datos");

        delBtn.setText("Borrar Dato");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        calcBtn.setText("Calcular");
        calcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Reiniciar");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        saveMBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMBtn.setText("Guardar");
        saveMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveMBtn);

        loadMBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        loadMBtn.setText("Cargar");
        loadMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMBtnActionPerformed(evt);
            }
        });
        jMenu1.add(loadMBtn);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Herramientas");

        graphMakerMI.setText("Graficador");
        graphMakerMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphMakerMIActionPerformed(evt);
            }
        });
        jMenu2.add(graphMakerMI);

        frequencyMBtn.setText("Frecuencias");
        frequencyMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyMBtnActionPerformed(evt);
            }
        });
        jMenu2.add(frequencyMBtn);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(inputTF)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(returnBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(delBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(calcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addContainerGap(180, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn)
                            .addComponent(delBtn)
                            .addComponent(calcBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(returnBtn)
                            .addComponent(closeBtn)
                            .addComponent(clearBtn)))
                    .addComponent(jScrollPane2))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        MainMenuFrame main =  new MainMenuFrame();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnBtnActionPerformed

    private void inputTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTFKeyPressed
        String dataPanel = "";
        try{
            if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
                double a = Double.parseDouble(inputTF.getText());
                list.add(inputTF.getText());
                for(String part: list)
                    dataPanel += part + "\n";
                dataDisplayTA.setText(dataPanel);
                inputTF.setText("");
            }
        
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "La entrada solo puede ser numeros,\n"
                                          + " y no puede ser vacia",
                                          "Error Numérico", JOptionPane.ERROR_MESSAGE);
            inputTF.setText("");
        }
    }//GEN-LAST:event_inputTFKeyPressed

    private void calcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBtnActionPerformed
        if(!list.isEmpty()){
            calc.setArray(list);
            resultDisplayTA.setText(String.valueOf(calc.getResults())); 
        }
    }//GEN-LAST:event_calcBtnActionPerformed

    
    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        String dataPanel = "";
        list.remove(inputTF.getText());
        for(String part: list)
                dataPanel += part + "\n";
            dataDisplayTA.setText(dataPanel);
            inputTF.setText("");
    }//GEN-LAST:event_delBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        list.clear();
        dataDisplayTA.setText("");
        resultDisplayTA.setText("");
        inputTF.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String dataPanel = "";
        try{
            double a = Double.parseDouble(inputTF.getText());
            System.out.println(inputTF.getText());
            list.add(inputTF.getText());
            for(String part: list)
                dataPanel += part + "\n";
            dataDisplayTA.setText(dataPanel);
            inputTF.setText("");
        
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "La entrada solo puede ser numeros,\n"
                                          + " y no puede ser vacia",
                                          "Error Numérico", JOptionPane.ERROR_MESSAGE);
            inputTF.setText("");
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void saveMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMBtnActionPerformed
        String path;
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("DSTF Files", "dstf");
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("Specify a file to save");  
        int userSelection = fileChooser.showSaveDialog(this);
        
        SavedFileObj savedFile = new SavedFileObj(windowID);
        posMeasuresFileReader savedFrequency = new posMeasuresFileReader(list);
        
        if (userSelection == JFileChooser.APPROVE_OPTION){
            File fileToSave = fileChooser.getSelectedFile();
            if(fileToSave.exists() && !fileToSave.isDirectory()){
            }
            
            if(!fileToSave.getAbsolutePath().endsWith(".dstf"))
                path = fileToSave.getAbsolutePath()+".dstf";
            else
                path = fileToSave.getAbsolutePath();
            
            try
            {
                FileOutputStream fileOut = new FileOutputStream(path);
                ObjectOutputStream out = new ObjectOutputStream(fileOut);
                Path pathS = Paths.get(path);
                fileName = pathS.getFileName().toString();
                this.setTitle(fileName);
                out.writeObject(savedFile);
                out.writeObject(savedFrequency);
                out.close();
                fileOut.close();
            }
            catch(IOException i){
                i.printStackTrace();
            }

        }
    }//GEN-LAST:event_saveMBtnActionPerformed

    private void loadMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMBtnActionPerformed
        //Handle open button action.
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("DSTF Files", "dstf");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Parts of the file manager(path, and savedFileObj)
            File file = fc.getSelectedFile();
            String path = file.getAbsolutePath();
            Path pathS = Paths.get(path);
            SavedFileObj e = null;
            
            //
            try{           
                FileInputStream fileIn = new FileInputStream(path);
                ObjectInputStream in = new ObjectInputStream(fileIn);
                e = (SavedFileObj) in.readObject();
                if(e.getWindowType() == 1){
                    graphFileReader a = (graphFileReader) in.readObject();
                    in.close();
                    fileIn.close();
                    graphicBarFrame b =  new graphicBarFrame(a,pathS.getFileName().toString());
                    b.setVisible(true);
                    this.dispose();
                }
                else if(e.getWindowType() == 2){
                    frequencyFileReader a = (frequencyFileReader) in.readObject();
                    in.close();
                    fileIn.close();
                    frequencyMeasuresFrame b = new frequencyMeasuresFrame(a, pathS.getFileName().toString());
                    b.setVisible(true);
                    this.dispose();
                }
                else if(e.getWindowType() == 3){
                    posMeasuresFileReader a = (posMeasuresFileReader) in.readObject();
                    in.close();
                    fileIn.close();
                    posMeasuresFrame b = new posMeasuresFrame(a, pathS.getFileName().toString());
                    b.setVisible(true);
                    this.dispose();
                }
                else{
                    in.close();
                    fileIn.close();
                }
            }
            catch(IOException i){
                i.printStackTrace();
            }
            catch(ClassNotFoundException c){
                c.printStackTrace();
            };
        }
    }//GEN-LAST:event_loadMBtnActionPerformed

    private void graphMakerMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphMakerMIActionPerformed
        graphicBarFrame a =  new graphicBarFrame(null,null);
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_graphMakerMIActionPerformed

    private void frequencyMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyMBtnActionPerformed
        frequencyMeasuresFrame a =  new frequencyMeasuresFrame(null,null);
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_frequencyMBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(posMeasuresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(posMeasuresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(posMeasuresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(posMeasuresFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new posMeasuresFrame(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton calcBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTextArea dataDisplayTA;
    private javax.swing.JButton delBtn;
    private javax.swing.JMenuItem frequencyMBtn;
    private javax.swing.JMenuItem graphMakerMI;
    private javax.swing.JTextField inputTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JMenuItem loadMBtn;
    private javax.swing.JTextArea resultDisplayTA;
    private javax.swing.JButton returnBtn;
    private javax.swing.JMenuItem saveMBtn;
    // End of variables declaration//GEN-END:variables
}
