/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfacePkg;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

import DataPkg.FileManager;
import DataPkg.SavedFileObj;
import DataPkg.graphFileReader;
import DataPkg.loader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author ignacio
 */
public class graphicBarFrame extends javax.swing.JFrame {
    //Atributes for the file
    String path = null;
    private final int windowID = 83;
    
    graphFileReader preLoad = null;
    private FileManager fileManager;
    /**
     * Creates new form graphicBarFrame
     * @param preLoad
     */
    public graphicBarFrame(graphFileReader preLoad) {
        initComponents();
        if(preLoad!=null){
            for(String data: preLoad.getColumns()){
                DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
                model.addColumn(data);
            }
            int count = 0;
            for(Integer data:preLoad.getValues()){              
                dataTable.setValueAt(data, 0, count);
                count++;
            }
            xTextField.setText(preLoad.getX());
            yTextField.setText(preLoad.getY());
            titleTextField.setText(preLoad.getTitle());
            ChartPanel panel;
            JFreeChart chart = null;

            DefaultCategoryDataset data = new DefaultCategoryDataset();

            barGraphPanel.removeAll();
            for(int i = 0; i<dataTable.getColumnCount(); i++){
                String input = String.valueOf(dataTable.getValueAt(0, i));
                data.addValue(Integer.parseInt(input), String.valueOf(dataTable.getColumnName(i)), "");
            }


            chart = ChartFactory.createBarChart(titleTextField.getText(), xTextField.getText(),
                    yTextField.getText(), data, PlotOrientation.VERTICAL, true,true,true);
            CategoryPlot plot = (CategoryPlot) chart.getPlot();
            plot.setDomainGridlinesVisible(true);

            panel = new ChartPanel(chart);
            panel.setBounds(5,10,400,475);

            barGraphPanel.add(panel);
            barGraphPanel.repaint();
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        xTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        yTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        addColumnBtn = new javax.swing.JButton();
        graphBtn = new javax.swing.JButton();
        returnBtn = new javax.swing.JButton();
        subsColumnBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        barGraphPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveMenuBtn = new javax.swing.JMenuItem();
        loadMenuBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Gráfico");

        jLabel2.setText("Comparación");

        jLabel3.setText("x:");

        xTextField.setText("X");

        jLabel4.setText("y:");

        yTextField.setText("Y");

        jLabel5.setText("Valores");

        closeBtn.setText("Cerrar");
        closeBtn.setPreferredSize(new java.awt.Dimension(120, 32));
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        resetBtn.setText("Reiniciar");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        addColumnBtn.setText("Columna +");
        addColumnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addColumnBtnActionPerformed(evt);
            }
        });

        graphBtn.setText("Graficar");
        graphBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphBtnActionPerformed(evt);
            }
        });

        returnBtn.setText("Regresar");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        subsColumnBtn.setText("Columna -");
        subsColumnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subsColumnBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Explicación");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(dataTable);

        jLabel7.setText("Título");

        titleTextField.setText("Gráfico de Barras");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xTextField)
                    .addComponent(yTextField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(returnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(subsColumnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(graphBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addColumnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(titleTextField))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBtn)
                    .addComponent(addColumnBtn)
                    .addComponent(graphBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnBtn)
                    .addComponent(subsColumnBtn)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout barGraphPanelLayout = new javax.swing.GroupLayout(barGraphPanel);
        barGraphPanel.setLayout(barGraphPanelLayout);
        barGraphPanelLayout.setHorizontalGroup(
            barGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 414, Short.MAX_VALUE)
        );
        barGraphPanelLayout.setVerticalGroup(
            barGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("Archivo");

        saveMenuBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuBtn.setText("Guardar");
        saveMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuBtn);

        loadMenuBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        loadMenuBtn.setText("Cargar");
        loadMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuBtnActionPerformed(evt);
            }
        });
        jMenu1.add(loadMenuBtn);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(barGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        barGraphPanel.removeAll();
        barGraphPanel.repaint();
    }//GEN-LAST:event_resetBtnActionPerformed

    private void graphBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphBtnActionPerformed
        ChartPanel panel;
        JFreeChart chart = null;
        
        DefaultCategoryDataset data = new DefaultCategoryDataset();
            
        barGraphPanel.removeAll();
        for(int i = 0; i<dataTable.getColumnCount(); i++){
            String input = String.valueOf(dataTable.getValueAt(0, i));
            data.addValue(Integer.parseInt(input), String.valueOf(dataTable.getColumnName(i)), "");
        }


        chart = ChartFactory.createBarChart(titleTextField.getText(), xTextField.getText(),
                yTextField.getText(), data, PlotOrientation.VERTICAL, true,true,true);
        CategoryPlot plot = (CategoryPlot) chart.getPlot();
        plot.setDomainGridlinesVisible(true);
        
        panel = new ChartPanel(chart);
        panel.setBounds(5,10,400,475);
        
        barGraphPanel.add(panel);
        barGraphPanel.repaint();
    }//GEN-LAST:event_graphBtnActionPerformed

    private void addColumnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addColumnBtnActionPerformed
    String s = (String)JOptionPane.showInputDialog(this, "Añada el nombre de la columna del dato");
    DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
    model.addColumn(s);
    }//GEN-LAST:event_addColumnBtnActionPerformed

    private void subsColumnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subsColumnBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        model.setColumnCount(model.getColumnCount()-1);
    }//GEN-LAST:event_subsColumnBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        MainMenuFrame main =  new MainMenuFrame();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void saveMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuBtnActionPerformed
        
        String path;
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("DSTF Files", "dstf");
        fileChooser.setFileFilter(filter);
        fileChooser.setDialogTitle("Specify a file to save");  
        int userSelection = fileChooser.showSaveDialog(this);
        
        ArrayList<String> columns = getColumns();
        ArrayList<Integer> values = getValues();
        SavedFileObj savedFile = new SavedFileObj(windowID);
        graphFileReader savedGraph = new graphFileReader(titleTextField.getText(), xTextField.getText(), yTextField.getText(), columns, values);
        
        if (userSelection == JFileChooser.APPROVE_OPTION){
            File fileToSave = fileChooser.getSelectedFile();
            if(fileToSave.exists() && !fileToSave.isDirectory()){
            }
            
            if(!fileToSave.getAbsolutePath().endsWith(".dstf"))
                path = fileToSave.getAbsolutePath()+".dstf";
            else
                path = fileToSave.getAbsolutePath();
            
            try
            {
                FileOutputStream fileOut = new FileOutputStream(path);
                ObjectOutputStream out = new ObjectOutputStream(fileOut);
                out.writeObject(savedFile);
                out.writeObject(savedGraph);
                out.close();
                fileOut.close();
            }
            catch(IOException i){
                i.printStackTrace();
            }

        }
    }//GEN-LAST:event_saveMenuBtnActionPerformed

    private void loadMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuBtnActionPerformed
        //Handle open button action.
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("DSTF Files", "dstf");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Parts of the file manager(path, and savedFileObj)
            File file = fc.getSelectedFile();
            String path = file.getAbsolutePath();
            SavedFileObj e = null;
            
            //
            try{           
                FileInputStream fileIn = new FileInputStream(path);
                ObjectInputStream in = new ObjectInputStream(fileIn);
                e = (SavedFileObj) in.readObject();
                if(e.getWindowType() == 83){
                    graphFileReader a = (graphFileReader) in.readObject();
                    in.close();
                    fileIn.close();
                    graphicBarFrame b =  new graphicBarFrame(a);
                    b.setVisible(true);
                    this.dispose();
                }
                else{
                    in.close();
                    fileIn.close();
                }
            }
            catch(IOException i){
                i.printStackTrace();
            }
            catch(ClassNotFoundException c){
                c.printStackTrace();
            };
        }
        
        
    }//GEN-LAST:event_loadMenuBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(graphicBarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(graphicBarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(graphicBarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(graphicBarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new graphicBarFrame(null).setVisible(true);
            }
        });
    }
    
    private ArrayList<String> getColumns(){
        ArrayList<String> list = new ArrayList();
        if(dataTable.getColumnCount()!=0){
            for(int i = 0; i<dataTable.getColumnCount(); i++)
                list.add(dataTable.getColumnName(i));
            return list;
        }
        else{
            return null;
        }
    }
    
    private ArrayList<Integer> getValues(){
        ArrayList<Integer> list = new ArrayList();
        if(dataTable.getColumnCount()!=0){
            for(int i = 0; i<dataTable.getColumnCount(); i++){
                String input = String.valueOf(dataTable.getValueAt(0, i));
                list.add(Integer.parseInt(input));
            }
            return list;
        }
        else{
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addColumnBtn;
    private javax.swing.JPanel barGraphPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton graphBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem loadMenuBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton returnBtn;
    private javax.swing.JMenuItem saveMenuBtn;
    private javax.swing.JButton subsColumnBtn;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JTextField xTextField;
    private javax.swing.JTextField yTextField;
    // End of variables declaration//GEN-END:variables
}
